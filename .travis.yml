os: linux
dist: trusty

services: docker

language: shell

branches:
  only:
    - develop
    - master

before_install:
  - env | sort
  - export TAG=travis
  - export VCS_REF=`git rev-parse --short HEAD`
  - export BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
  - export home=$(pwd)
  - export travis_dir="${home}/images/${VERSION}-${BENCH}/${VARIANT}"
  - export IMAGE_NAME="docker-frappe-travis:${TAG}"

install:
  - echo "Changing to travis test directory ($travis_dir)"
  - cd "$travis_dir"
  # Prepare test image for local build version and variant
  - sed -i -e "s|FROM monogramm/docker-frappe:.*|FROM ${IMAGE_NAME}|g" test/Dockerfile
  # Test container build
  - travis_retry docker-compose build

before_script:
  - docker images

script:
  - echo "Changing to travis test directory ($travis_dir)"
  - cd "$travis_dir"
  # Test container run
  - travis_retry docker-compose up -d && sleep 20
  - docker-compose ps
  - docker-compose logs "frappe_db"
  - docker-compose ps "frappe_db" | grep "Up" || exit 1
  - docker-compose logs "frappe_app"
  - docker-compose ps "frappe_app" | grep "Up" || exit 1
  - docker-compose logs "frappe_web"
  - docker-compose ps "frappe_web" | grep "Up" || exit 1
  - echo 'Wait until sites and apps database installed (4-5 minutes)' && sleep 300
  - docker-compose ps
  - docker-compose logs "frappe_db"
  - docker-compose ps "frappe_db" | grep "Up"
  - docker-compose logs "frappe_app"
  - docker-compose ps "frappe_app" | grep "Up"
  - docker-compose logs "frappe_web"
  - docker-compose ps "frappe_web" | grep "Up"
  - echo 'Wait until tests finished (4-5 minutes)' && sleep 270
  - docker-compose logs "sut"
  - docker-compose ps "sut" | grep "Exit 0"
  # Test container db reinstall
  - docker-compose run --rm "frappe_app" bench reinstall --help
  - docker-compose run --rm "frappe_app" bench reinstall --yes && sleep 20
  # Test container restart
  - docker-compose down
  - travis_retry docker-compose up -d && sleep 20
  - docker-compose ps
  - docker-compose logs "frappe_db"
  - docker-compose ps "frappe_db" | grep "Up"
  - docker-compose logs "frappe_app"
  - docker-compose ps "frappe_app" | grep "Up"
  - docker-compose logs "frappe_web"
  - docker-compose ps "frappe_web" | grep "Up"
  - echo 'Wait until tests finished (4-5 minutes)' && sleep 270
  - docker-compose logs "sut"
  - docker-compose ps "sut" | grep "Exit 0"
  # Test container migrate
  - docker-compose run --rm "frappe_app" bench migrate --help
  - docker-compose run --rm "frappe_app" migrate
  # Test container backup
  - docker-compose run --rm "frappe_app" bench backup --help
  - docker-compose run --rm "frappe_app" backup && sleep 5
  - docker-compose run --rm "frappe_app" backup && sleep 5
  - docker-compose run --rm "frappe_app" backup && sleep 5
  - docker-compose run --rm "frappe_app" backup && sleep 5
  - docker-compose run --rm "frappe_app" backup && sleep 5
  - docker-compose run --rm "frappe_app" bench restore --help
  # Test container "old" restore (file number instead of file name)
  - docker-compose run --rm "frappe_app" restore 1

after_script:
  - echo "Changing to project directory ($home)"
  - cd "$home"
  - sudo pip install coverage==4.5.4
  - sudo pip install python-coveralls
  # Create same directory path as docker test execution
  - sudo mkdir -p '/home/frappe/frappe-bench/apps'
  - sudo ln -sf "$home" '/home/frappe/frappe-bench/apps/erpnext_template'
  # Copy and convert coverage to XML format
  - cp '/srv/erpnext/frappe/sites/.coverage' .coverage
  - coverage xml
  # Publish coverage to Coveralls
  - coveralls -b "$home" -d "$home/.coverage"
  # Publish coverage to Codacy
  - test -z "$CODACY_PROJECT_TOKEN" || bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l Python -r "./coverage.xml"
  # Publish coverage to Codecov
  - test -z "$CODECOV_TOKEN" || bash <(curl -s https://codecov.io/bash)

notifications:
  email: false

jobs:
  allow_failures:
    - env: VERSION=develop BENCH=master VARIANT=alpine
    - env: VERSION=develop BENCH=master VARIANT=slim-buster
    - env: VERSION=develop BENCH=master VARIANT=buster
    - env: VERSION=12.2 BENCH=master VARIANT=alpine
    - env: VERSION=12.2 BENCH=master VARIANT=slim-buster
    - env: VERSION=12.2 BENCH=master VARIANT=buster
    - env: VERSION=12.1 BENCH=master VARIANT=alpine
    - env: VERSION=12.1 BENCH=master VARIANT=slim-buster
    - env: VERSION=12.1 BENCH=master VARIANT=buster
    - env: VERSION=12.0 BENCH=master VARIANT=alpine
    - env: VERSION=12.0 BENCH=master VARIANT=slim-buster
    - env: VERSION=12.0 BENCH=master VARIANT=buster
    # Stop supporting Frappe 10 and Python 2
    - env: VERSION=10.x BENCH=master VARIANT=alpine
    - env: VERSION=10.x BENCH=master VARIANT=slim-buster
    - env: VERSION=10.x BENCH=master VARIANT=buster

env: # Environments
  - VERSION=develop BENCH=master VARIANT=alpine
  - VERSION=develop BENCH=master VARIANT=slim-buster
  - VERSION=develop BENCH=master VARIANT=buster
  - VERSION=10.x BENCH=master VARIANT=alpine
  - VERSION=10.x BENCH=master VARIANT=slim-buster
  - VERSION=10.x BENCH=master VARIANT=buster
  - VERSION=11.1 BENCH=master VARIANT=alpine
  - VERSION=11.1 BENCH=master VARIANT=slim-buster
  - VERSION=11.1 BENCH=master VARIANT=buster
  - VERSION=12.0 BENCH=master VARIANT=alpine
  - VERSION=12.0 BENCH=master VARIANT=slim-buster
  - VERSION=12.0 BENCH=master VARIANT=buster
  - VERSION=12.1 BENCH=master VARIANT=alpine
  - VERSION=12.1 BENCH=master VARIANT=slim-buster
  - VERSION=12.1 BENCH=master VARIANT=buster
  - VERSION=12.2 BENCH=master VARIANT=alpine
  - VERSION=12.2 BENCH=master VARIANT=slim-buster
  - VERSION=12.2 BENCH=master VARIANT=buster
  - VERSION=12.3 BENCH=master VARIANT=alpine
  - VERSION=12.3 BENCH=master VARIANT=slim-buster
  - VERSION=12.3 BENCH=master VARIANT=buster
  - VERSION=12.4 BENCH=master VARIANT=alpine
  - VERSION=12.4 BENCH=master VARIANT=slim-buster
  - VERSION=12.4 BENCH=master VARIANT=buster
