version: "2.3"

services:
  # https://docs.docker.com/docker-hub/builds/automated-testing/
  sut:
    build:
      context: ./test
      dockerfile: Dockerfile
    command: sh /docker_test.sh
    depends_on:
      - frappe_db
      - frappe_app
      - frappe_web
      - frappe_scheduler
      - frappe_worker_default
      - frappe_worker_long
      - frappe_worker_short
      - frappe_socketio
      - frappe_redis_cache
      - frappe_redis_queue
      - frappe_redis_socketio
    environment:
      # Container setup
      - NODE_TYPE=sut
      # Docker setup
      - DOCKER_APPS_TIMEOUT=900
      - DOCKER_DEBUG=1
      # Test setup
      - TEST_VERSION=develop
      # Frappe setup
      - FRAPPE_DEFAULT_SITE=${FRAPPE_SITE}
    volumes_from:
      - frappe_app
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  frappe_app:
    # For development or CI, build from local Dockerfile
    # For production, download prebuilt image
    build: ./
    build:
      context: .
    image: ${IMAGE_NAME}
    container_name: frappe_app
    command: app
    #restart: always
    expose:
      - '8000'
    #ports:
    #  - "8000:8000"
    depends_on:
      frappe_db:
        condition: service_healthy
      frappe_redis_cache:
        condition: service_started
      frappe_redis_queue:
        condition: service_started
      frappe_redis_socketio:
        condition: service_started
    links:
      - frappe_db
    environment:
      # Docker setup
      - DOCKER_DB_ALLOWED_HOSTS=
      # Frappe setup
      - FRAPPE_APP_INIT=frappe
      - FRAPPE_APP_RESET=1
      - FRAPPE_DEFAULT_PROTOCOL=http
      - FRAPPE_DEFAULT_SITE=${FRAPPE_SITE}
      - FRAPPE_HTTP_PORT=80
      - FRAPPE_WEBSERVER_PORT=80
      - FRAPPE_SOCKETIO_PORT=3000
      - FRAPPE_BUILD_OPTIONS=
      - FRAPPE_LOGGING=1
      - DEVELOPER_MODE=0
      - ALLOW_TESTS=1
      - SERVER_SCRIPT_ENABLED=1
      #- ADMIN_USER=Administrator
      - ADMIN_PASSWORD=${FRAPPE_ADMIN_PWD}
      - ENCRYPTION_KEY=${FRAPPE_ENCRYPTION_KEY}
      # Database setup
      - DB_TYPE=mariadb
      - DB_HOST=frappe_db
      - DB_PORT=3306
      - DB_NAME=${FRAPPE_DB_NAME}
      - DB_PASSWORD=${FRAPPE_DB_PWD}
      - DB_ROOT_PASSWORD=${FRAPPE_DB_ROOT_PWD}
      # Mail setup
      - MAIL_MUTED=false
      - MAIL_HOST=${FRAPPE_MAIL_HOST}
      - MAIL_PORT=1025
      - MAIL_USE_SSL=
      - MAIL_LOGIN=${FRAPPE_SMTP_USER}
      - MAIL_PASSWORD=${FRAPPE_SMTP_PWD}
      - MAIL_EMAIL_ID=frappe@${FRAPPE_MAIL_HOST}
      - MAIL_SENDER_NAME=Frappe
      # Redis setup
      - REDIS_CACHE_HOST=frappe_redis_cache
      - REDIS_QUEUE_HOST=frappe_redis_queue
      - REDIS_SOCKETIO_HOST=frappe_redis_socketio
    volumes:
      - /srv/erpnext/frappe/sites:/home/frappe/frappe-bench/sites
      - /srv/erpnext/frappe/logs:/home/frappe/frappe-bench/logs
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  frappe_web:
    image: nginx:alpine
    container_name: frappe_web
    hostname: frappe_web
    domainname: frappe_web
    #restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # If you need SSL connection, you can provide your own certificates
      # - ./certs:/etc/letsencrypt
      # - ./certs-data:/data/letsencrypt
    volumes_from:
      - frappe_app
    ports:
      - "8080:80"
      # If you need SSL connection
      # - "443:443"
    links:
      - frappe_app
      - frappe_socketio

  frappe_db:
    image: mariadb:10
    container_name: frappe_db
    #restart: always
    command: --character_set_client=utf8 --bind-address=0.0.0.0 --character-set-client-handshake=FALSE --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --sql-mode="ALLOW_INVALID_DATES"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "--user=${FRAPPE_DB_NAME}", "--password=${FRAPPE_DB_PWD}"]
      timeout: 10s
      retries: 5
    expose:
      - '3306'
    environment:
      - MYSQL_ROOT_PASSWORD=${FRAPPE_DB_ROOT_PWD}
      # Following parameters are not needed with Frappe 12 or higher since it will create DB itself
      - MYSQL_DATABASE=${FRAPPE_DB_NAME}
      - MYSQL_USER=${FRAPPE_DB_NAME}
      - MYSQL_PASSWORD=${FRAPPE_DB_PWD}
    volumes:
      - /srv/erpnext/db:/var/lib/mysql

  frappe_mailer:
    image: sj26/mailcatcher:latest
    hostname: frappe_mailer
    container_name: frappe_mailer
    restart: always
    expose:
      - 1025
    ports:
      - 1080:1080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  frappe_scheduler:
    image: ${IMAGE_NAME}
    container_name: frappe_scheduler
    command: scheduler
    #restart: always
    depends_on:
      - frappe_app
    environment:
      # Docker setup
      - DOCKER_APPS_TIMEOUT=900
    volumes_from:
      - frappe_app
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  frappe_worker_default:
    image: ${IMAGE_NAME}
    container_name: frappe_worker_default
    command: worker-default
    #restart: always
    depends_on:
      - frappe_app
    environment:
      # Docker setup
      - DOCKER_APPS_TIMEOUT=900
    volumes_from:
      - frappe_app
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  frappe_worker_long:
    image: ${IMAGE_NAME}
    container_name: frappe_worker_long
    command: worker-long
    #restart: always
    depends_on:
      - frappe_app
    environment:
      # Docker setup
      - DOCKER_APPS_TIMEOUT=900
    volumes_from:
      - frappe_app
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  frappe_worker_short:
    image: ${IMAGE_NAME}
    container_name: frappe_worker_short
    command: worker-short
    #restart: always
    depends_on:
      - frappe_app
    environment:
      # Docker setup
      - DOCKER_APPS_TIMEOUT=900
    volumes_from:
      - frappe_app
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  frappe_socketio:
    image: ${IMAGE_NAME}
    container_name: frappe_socketio
    command: node-socketio
    #restart: always
    ports:
      - 3000:3000
    depends_on:
      - frappe_app
    environment:
      # Docker setup
      - DOCKER_APPS_TIMEOUT=900
    volumes_from:
      - frappe_app
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  frappe_redis_cache:
    image: redis:alpine
    container_name: frappe_redis_cache
    #restart: always
    volumes:
      - ./redis_cache.conf:/etc/conf.d/redis.conf:ro
    command: ["redis-server","/etc/conf.d/redis.conf"]

  frappe_redis_queue:
    image: redis:alpine
    container_name: frappe_redis_queue
    #restart: always

  frappe_redis_socketio:
    image: redis:alpine
    container_name: frappe_redis_socketio
    #restart: always
